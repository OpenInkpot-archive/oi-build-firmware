#!/bin/sh
set -e

PATH=$PATH:/usr/sbin

#
# FIXME: this script is steaming pile of shit.
#

PACKAGES="mdev fbreader xserver-xfbdev"

KEEP_FILES=0
NFSROOT=0
V3EXT=0
SKIP_BOOTSTRAP=0
SECOND_STAGE=0

for option in $@; do
	case "x$option" in
		"xkeepfiles")
			KEEP_FILES=1
			;;
		"xnfsroot")
			NFSROOT=1
			;;
		"xv3ext")
			V3EXT=1
			;;
		"xskip-bootstrap")
			SKIP_BOOTSTRAP=1
			;;
		"xsecond-stage")
			SECOND_STAGE=1
			;;
		*)
		;;
	esac
done

if [ $V3EXT -eq 1 ]; then
	flavour=-v3ext
else
	flavour=-v3
fi


if [ $SKIP_BOOTSTRAP -eq 1 ]; then
    shift
else
    if [ "$NFSROOT" -eq 1 ]; then
        PACKAGES="$PACKAGES linux-image-2.6.25-nfsroot$flavour-armel linux-modules-2.6.25-nfsroot$flavour kexec-tools boot-local-kernel"
        PACKAGES="$PACKAGES gdbserver"
    else
        PACKAGES="$PACKAGES linux-modules-2.6.25$flavour"
    fi

    PACKAGES2="liberation-fonts fbreader madshelf libewl libewl-engines-all libevas-engine-software-xcb"

    ARCH=armel

    if [ $SECOND_STAGE -eq 1 ]; then
    	shift
    else
        ARCHIVES=/var/cache/apt/archives
        while sudo umount /rootfs-i386$ARCHIVES 2>/dev/null; do :; done
        sudo rm -rf /rootfs-i386
        while sudo umount /rootfs-$ARCH$ARCHIVES 2>/dev/null; do :; done
    	sudo rm -rf /rootfs-$ARCH

    	sc-bootstrap-host
    	sc-bootstrap-target $ARCH

    	echo "deb http://openinkpot.org/pub/SLIND clydesdale core security debug gui media" > /rootfs-$ARCH/etc/apt/sources.list

    	cross-shell sh $ARCH apt-get update
    	cross-shell sh $ARCH apt-get -y --force-yes dist-upgrade
    	cross-shell sh $ARCH apt-get -y --force-yes install $PACKAGES
    fi
    cross-shell sh $ARCH apt-get -y --force-yes install $PACKAGES2

    echo "echo 200 > /sys/class/graphics/fb0/defio_delay" >> /rootfs-$ARCH/etc/init.d/rcS

    echo "#!/bin/sh
HOME=/home DISPLAY=:0 exec madshelf" > /rootfs-$ARCH/usr/bin/madshelf.sh
    chmod a+x /rootfs-$ARCH/usr/bin/madshelf.sh

    echo "::sysinit:/etc/init.d/rcS
#:2345:respawn:/bin/sh
::respawn:Xfbdev -hide-cursor -ac -noreset -dpi 170 -nolisten inet6
::respawn:madshelf.sh" > /rootfs-$ARCH/etc/inittab
    sed -e '1d' < /rootfs-$ARCH/etc/passwd > /rootfs-$ARCH/etc/passwd2
    echo "root:scKY2GQGBG3Nc:0:0:root:/root:/bin/sh" > /rootfs-$ARCH/etc/passwd
    cat /rootfs-$ARCH/etc/passwd2 >> /rootfs-$ARCH/etc/passwd
    rm /rootfs-$ARCH/etc/passwd2

    ln -sf /proc/mounts /rootfs-$ARCH/etc/mtab

    echo '#!/bin/sh

if [ -z $ACTION ] || [ $ACTION = "add" ] ; then
	for i in /dev/mmcblk*
	do
		D1=`echo $i | sed -e s/p[0-9]*//`
		D2="/dev/"`echo $MDEV | sed -e s/p[0-9]*//`
		if [ $D1 != $D2 ]
		then
			umount $i
			rm -f $i
		fi
	done

	mount -o sync /dev/$MDEV /mnt

	killall -HUP madshelf
	exit 0
fi

if [ $ACTION = "remove" ] ; then
	umount -f /dev/$MDEV
	killall -HUP madshelf
	exit 0
fi

echo "Unknown action. This script must be called by mdev!"
exit 1
' > /rootfs-$ARCH/sbin/automount.sh
    chmod a+x /rootfs-$ARCH/sbin/automount.sh

    echo "mmcblk[0-9]p[0-9] 0:0 0660 */sbin/automount.sh
mmcblk[0-9]* 0:0 0660 */sbin/automount.sh" > /rootfs-$ARCH/etc/mdev.conf

    if [ "$NFSROOT" -eq 1 ]; then
        echo "eink_apollofb
g_ether
lbookv3_keys
lbookv3_battery
mmc_block
s3cmci
vfat
" > /rootfs-$ARCH/etc/modules
    else
        echo "lbookv3_keys
lbookv3_battery
mmc_block
s3cmci
vfat
" > /rootfs-$ARCH/etc/modules
    fi
    mkdir /rootfs-$ARCH/etc/modprobe.d

    echo "auto lo
iface lo inet loopback

auto usb0
iface usb0 inet static
	address 192.168.111.1
	netmask 255.255.255.0
	broadcast 192.168.111.255
" > /rootfs-$ARCH/etc/network/interfaces

    touch /rootfs-$ARCH/etc/mdev.conf
fi

sc-pack-rootfs $ARCH nfsroot$flavour-armel.tar

if [ $NFSROOT -ne 1 ]; then
    sudo apt-get -y --force-yes install oi-v3-build-firmware mtd-tools

    cross-shell sh $ARCH apt-get -y --force-yes install linux-image-2.6.25$flavour-armel

    sudo rm -rf tmp
    mkdir tmp
    (cd tmp && sudo tar xf ../nfsroot$flavour-armel.tar)
    mkfs.jffs2 -l -n -e 16384 -s 512 --faketime -r tmp -o rootfs.jffs2

    mkv3update --write-oi=V3update.bin /rootfs-$ARCH/boot/vmlinuz-2.6.25$flavour-armel +rootfs.jffs2

    [ $KEEP_FILES -eq 1 ] && cp /rootfs-$ARCH/boot/vmlinuz-2.6.25$flavour-armel ./

    cross-shell sh $ARCH apt-get -y --force-yes remove linux-image-2.6.25$flavour-armel

    [ $KEEP_FILES -ne 1 ] && sudo rm -rf rootfs.jffs2 nfsroot$flavour-armel.tar
    sudo rm -rf tmp
fi
