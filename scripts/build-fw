#!/bin/sh
# vim: set ts=4 expandtab shiftwidth=4:

set -e

LINUX_VERSION='2.6.32'
DEVICE=v3
MODE=install
VARIANT=
if [ -z "$VERSION" ]; then
    VERSION=$(date +%Y%m%d-%H%M%S)
fi
ADDON_PACKAGES=

KEEP_WORKDIR=0

set_device() {
    case "$1" in
        v3|v3ext|v3all) DEVICE="$1";;
        n516) DEVICE="$1";;
        dns323) DEVICE="$1";;
        *) echo "Unknown device: $1"; exit 1;;
    esac
}

set_mode() {
    case "$1" in
        install|live|nfsroot) MODE="$1";;
        *) echo "Unknown mode: $1"; exit 1;;
    esac
}

set_variant() {
    case "$1" in
        azbooka) VARIANT="$1";;
        default) VARIANT=;;
        *) echo "Unknown variant: $1"; exit 1;;
    esac
}

usage() {
    echo "Usage: build-fw [--keep-workdir] [(-m |--mode=)(install|live|nfsroot)]"
    echo "    [(-a |--variant=)(default|azbooka)] "
    echo "    [--addon-packages \"space delimited list of package filenames\"]"
    echo "    <device> [<version>]"
    echo
    echo " device should be 'v3', 'v3ext', 'v3all', 'n516', 'dns323',"
    echo " mode defaults to 'install',"
    echo " variant defaults to 'default',"
    echo " version defaults to today's snapshot."
}

TMP=$(getopt -l help,keep-workdir,addon-packages:,mode:,variant: -o hd:m:a: -- "$@")

if [ $? != 0 ]; then
    exit 1
fi

eval set -- "$TMP"

while true; do
    case "$1" in
        --keep-workdir) KEEP_WORKDIR=1; shift;;
        --addon-packages) ADDON_PACKAGES="$2"; shift; shift;;
        -m|--mode) set_mode "$2"; shift; shift;;
        -a|--variant) set_variant "$2"; shift; shift;;
        -h|--help) usage; exit 0;;
        --) shift; break;;
        *) echo "Unexpected argument in getopt parsing: $1"; exit 1;;
    esac
done

if [ $# -lt 1 -o $# -gt 2 ]; then
    usage
    exit 1
fi

set_device "$1"
shift

if [ $# -eq 1 ]; then
    VERSION="$1"
fi

if [ $MODE = "live" ] && ( [ $DEVICE = "v3" ] || [ $DEVICE = "v3ext" ] ); then
    echo "Warning: Selecting v3all instead of v3 or v3ext for OI-on-SD"
    DEVICE=v3all
fi

case "$MODE-$DEVICE" in
    nfsroot-v3|nfsroot-n516) :;;
    nfsroot-*) echo "Error: only v3 is supported for nfsroot";  exit 1;;
    *) ;;
esac

case $DEVICE in
    v3|v3all) KERNEL_FLAVOUR=-v3;;
    v3ext) KERNEL_FLAVOUR=-v3ext;;
    n516) KERNEL_FLAVOUR=-n516;;
    dns323) KERNEL_FLAVOUR=-dns323;;
    *) echo "Unknown device: $DEVICE"; exit 1;;
esac

# workaround for broken 2.6.32 kernel on V3
case $DEVICE in
    v3|v3all|v3ext) LINUX_VERSION='2.6.29';;
    *) ;;
esac
#

case "$DEVICE-$VARIANT" in
    n516-azbooka) :;;
    *-azbooka) echo "Error: azbooka variant is supported only for n516"; exit 1;;
    *) ;;
esac

if [ $MODE = nfsroot ]; then
    KERNEL_FLAVOUR="-nfsroot${KERNEL_FLAVOUR}"
fi

case $DEVICE in
    v3|v3ext|v3all) MANUFACTURER=hanlin;;
    n516) MANUFACTURER=hanvon;;
    dns323) MANUFACTURER=dlink;;
    *) echo "Unknown device: $DEVICE"; exit 1;;
esac

case $DEVICE in
    v3|v3ext|v3all) ARCH=armel;;
    dns323) ARCH=armel;;
    n516) ARCH=mipsel;;
    *) echo "Unknown device: $DEVICE"; exit 1;;
esac

HOSTARCH=$(dpkg --print-architecture)

# --

OUTPUT_DIR=$(pwd)/output/"$VERSION"
mkdir -p "$OUTPUT_DIR"
ln -sf $VERSION output/latest

case "$VARIANT-$DEVICE" in
    -dns323)
        OUTPUT_NAME=dns323-$VERSION;;
    -*)
        OUTPUT_NAME=oi-$MANUFACTURER-$DEVICE-$MODE-$VERSION;;
    azbooka-n516)
        OUTPUT_NAME=azbooka516-$VERSION;;
esac

WORK_DIR=$(pwd)/build-fw-$VERSION
mkdir -p $WORK_DIR
cleanup() {
    RETCODE=$?
    [ -z "$WORK_DIR" ] || sudo rm -rf "$WORK_DIR"
    return $RETCODE
}
if [ $KEEP_WORKDIR -eq 0 ]; then
    trap cleanup 0
else
    ln -s build-fw-$VERSION build-fw-latest
fi

# --

#
# FIXME: this script is steaming pile of shit.
#

# Basic stuff
case $DEVICE in
    dns323)
        PACKAGES="mdev dropbear mtd-support";;
    *)        
        PACKAGES="mdev autosuspend-support dropbear mtd-support oi-hotplug";;
esac
case $DEVICE-$MODE in
    v3*-live)
        ;;
    v3*-*)
        PACKAGES="$PACKAGES v3-format-storage";;
    n516-*)
        PACKAGES="$PACKAGES metronomefb-support metronome-state n516-waveforms n516-format-storage"
        ;;
esac

# Kernel
case $DEVICE in
    dns323)
        ;;
    *)
        PACKAGES="$PACKAGES linux-modules-${LINUX_VERSION}${KERNEL_FLAVOUR}"
        ;;
esac

if [ "$MODE" = nfsroot ]; then
    PACKAGES="$PACKAGES linux-image-${LINUX_VERSION}${KERNEL_FLAVOUR}"
    PACKAGES="$PACKAGES boot-local-kernel"
fi

case $DEVICE in
    dns323)
        ;;
    *)
        # GUI
        PACKAGES="$PACKAGES nulldm xserver-xfbdev fontconfig nullcursor"
        # Fonts
        PACKAGES="$PACKAGES liberation-fonts libertine-fonts droid-fonts ptsans-fonts"
        ;;
esac    

case $DEVICE-$VARIANT in
    *-azbooka)
        ;;
    dns323-*)
            ;;
    *)
        PACKAGES="$PACKAGES droid-fallback-fonts";;
esac

# i18n
case $DEVICE in
    dns323)
        ;;
    *)
        PACKAGES="$PACKAGES gconv-data-basic"
        ;;
esac

# Applications
case $DEVICE in
    dns323)
        # PACKAGES="$PACKAGES vlc"
        ;;
    *)
        PACKAGES="$PACKAGES madshelf libextractor-mini-plugins"
        PACKAGES="$PACKAGES fbreader"
        PACKAGES="$PACKAGES locopdf"
        PACKAGES="$PACKAGES cr3"
        PACKAGES="$PACKAGES madeye"
        PACKAGES="$PACKAGES edict mueller7-dict"
        PACKAGES="$PACKAGES etimetool"
        PACKAGES="$PACKAGES gm shared-mime-info epuzzles uk uk-send uuwm eshutdown elock language-selector erot"
        PACKAGES="$PACKAGES make-home checkfs"
        PACKAGES="$PACKAGES mime-defaults"
        ;;
esac

case $DEVICE in
    v3|v3ext|v3all)
        PACKAGES="$PACKAGES esplash-data-v3 fbreader-settings-v3 libeoi-settings-v3"
        PACKAGES="$PACKAGES uk-settings-v3 cr3-settings-v3 eabout-settings-v3"
        ;;
    n516)
        PACKAGES="$PACKAGES fbreader-settings-n516 madshelf-settings-n516 libeoi-settings-n516"
        PACKAGES="$PACKAGES locopdf-settings-n516 madeye-settings-n516 uk-settings-n516"
        PACKAGES="$PACKAGES usbwatcher usbwatcher-data-azbooka-n516 elowbatt"
        PACKAGES="$PACKAGES madaudio cr3-settings-n516 edict-settings-n516"
        PACKAGES="$PACKAGES madaudio-mp3"

        case $VARIANT in
            azbooka)
                PACKAGES="$PACKAGES esplash-data-azbooka-n516 liblanguage-azbooka-data"
                PACKAGES="$PACKAGES libeoi-settings-azbooka oi-themes-azbooka gm-theme-azbooka"
                PACKAGES="$PACKAGES elock-azbooka locopdf-theme-azbooka fbreader-theme-azbooka"
                PACKAGES="$PACKAGES edict-theme-azbooka eabout-settings-azbooka"
                ;;
            '')
                PACKAGES="$PACKAGES esplash-data-n516 eabout-settings-n516";;
        esac
        ;;
esac

# case $VARIANT in
#     '')
#         PACKAGES="$PACKAGES libextractor-mini-plugins-extra";;
# esac
        

# Debug
case $DEVICE in
    dns323)
        ;;
    *)
        PACKAGES="$PACKAGES strace rsync kexec-tools mtd-utils sqlite3"
        ;;
esac

# if [ "$MODE" = "nfsroot" ]; then
#     PACKAGES="$PACKAGES gdbserver"
# fi

ARCHIVES=/var/cache/apt/archives

umount_all() {
    if [ -e "$1" ]; then
        sudo find "$1" -type d -print0 | xargs -0 -r -i{} -- sh -c "! mountpoint -q '{}' || (echo 'unmounting {}'; while sudo umount '{}' 2>/dev/null; do :; done)"
    fi
}

umount_all $ROOTFS_PATH/rootfs-$HOSTARCH
umount_all $ROOTFS_PATH/rootfs-$ARCH

sudo rm -rf $ROOTFS_PATH/rootfs-$HOSTARCH
sudo rm -rf $ROOTFS_PATH/rootfs-$ARCH

cross-bootstrap-host
cross-bootstrap-target $ARCH

update_sources_list() {
  . /etc/cross-shell/config

  echo "deb http://ftp.iplinux.org/iplinux $SUITE core security gui media" > $ROOTFS_PATH/rootfs-$ARCH/etc/apt/sources.list
  echo "deb http://openinkpot.org/pub/oi $SUITE core security gui media" >> $ROOTFS_PATH/rootfs-$ARCH/etc/apt/sources.list
}

update_sources_list

cross-shell $ARCH apt-get update
cross-shell $ARCH apt-get -y --force-yes dist-upgrade
cross-shell $ARCH apt-get -y --force-yes install $PACKAGES


if [ -n "$ADDON_PACKAGES" ]; then
    for i in $ADDON_PACKAGES; do
        cp /build/$i /var/cache/apt/archives-$ARCH/
        install_packages="$install_packages /var/cache/apt/archives/$i"
    done
    cross-shell $ARCH dpkg -i $install_packages
fi

server_args="-wr -ac -noreset -nolisten inet6 -keybd evdev,,device=/dev/event0"

case $DEVICE in
    v3|v3ext|v3all)
        server_args="$server_args -screen 600x800 -dpi 170";;
    n516)
        server_args="$server_args -fb /dev/fb1 -screen 600x800 -dpi 200";;
    *)
        :;;
esac

echo "SERVER_ARGS=\"$server_args\"" > $ROOTFS_PATH/rootfs-$ARCH/etc/default/nulldm

echo 'root:scKY2GQGBG3Nc:0:0:root:/root:/bin/sh' > $ROOTFS_PATH/rootfs-$ARCH/etc/passwd

# Humm??
ln -sf /proc/mounts $ROOTFS_PATH/rootfs-$ARCH/etc/mtab

case $DEVICE in
    v3|v3ext|v3all)
        if [ "$MODE" = "nfsroot" ]; then
            echo "eink_apollofb
lbookv3_keys
lbookv3_battery
mmc_block
s3cmci
vfat
evdev" > $ROOTFS_PATH/rootfs-$ARCH/etc/modules
        else
            echo "lbookv3_keys
lbookv3_battery
mmc_block
s3cmci
vfat
evdev
mtdchar" > $ROOTFS_PATH/rootfs-$ARCH/etc/modules
        fi
        ;;
    n516)
        echo "lm75
snd-soc-n516
jz4740_udc" > $ROOTFS_PATH/rootfs-$ARCH/etc/modules
        ;;
esac


mkdir -p $ROOTFS_PATH/rootfs-$ARCH/mnt/storage
mkdir -p $ROOTFS_PATH/rootfs-$ARCH/media/sd

if [ "$MODE" != "nfsroot" ]; then
    echo "tmpfs /tmp tmpfs defaults 0 0
tmpfs /var/run tmpfs defaults 0 0
tmpfs /var/tmp tmpfs defaults 0 0
tmpfs /var/lock tmpfs defaults 0 0
tmpfs /var/log tmpfs defaults 0 0" > $ROOTFS_PATH/rootfs-$ARCH/etc/fstab

    case $DEVICE-$MODE in
        v3-install|v3ext-install)
            echo "/dev/mtdblock_STORAGE /mnt/storage jffs2 noatime 0 0" >> $ROOTFS_PATH/rootfs-$ARCH/etc/fstab
            ;;
        v3all-live)
            echo "/dev/mtdblock_STORAGE /mnt/storage vfat quiet,iocharset=utf8,flush,noatime 0 0" >> $ROOTFS_PATH/rootfs-$ARCH/etc/fstab
            ;;
        n516-install)
            echo "/dev/mtdblock_storage /mnt/storage vfat quiet,iocharset=utf8,flush,noatime 0 0" >> $ROOTFS_PATH/rootfs-$ARCH/etc/fstab
            ;;
        dns323-install)
            ;;
        *)
            echo "Unknown device/mode: $DEVICE-$MODE"
            exit 1
            ;;
    esac

    case $MODE in
        install)
            rm -rf $ROOTFS_PATH/rootfs-$ARCH/home
            ln -s /mnt/storage/.home $ROOTFS_PATH/rootfs-$ARCH/home
            ;;
        live)
            ;;
    esac
    rm -rf $ROOTFS_PATH/rootfs-$ARCH/root
    ln -s /home/user $ROOTFS_PATH/rootfs-$ARCH/root

    rm -rf $ROOTFS_PATH/rootfs-$ARCH/var/log/*
    # Apt goes awry if log directory does not exist.
    mkdir -p $ROOTFS_PATH/rootfs-$ARCH/var/log/apt
fi

if [ -z "$VARIANT" ]; then
    echo "OpenInkpot $VERSION ($DEVICE)" > $ROOTFS_PATH/rootfs-$ARCH/etc/openinkpot-version
else
    echo "OpenInkpot $VERSION ($DEVICE-$VARIANT)" > $ROOTFS_PATH/rootfs-$ARCH/etc/openinkpot-version
fi
#<!--
iface=usb0
#[ "$DEVICE" == "n516" ] && iface=eth0

echo "auto lo
iface lo inet loopback

auto $iface
iface $iface inet static
    address 192.168.111.1
    netmask 255.255.255.0
    broadcast 192.168.111.255
    gateway 192.168.111.2
" > $ROOTFS_PATH/rootfs-$ARCH/etc/network/interfaces

echo 'nameserver 192.168.111.2' > $ROOTFS_PATH/rootfs-$ARCH/etc/resolv.conf

case $DEVICE in
  v3*)
    HWADDR=02:00:00:00:00:03;;
  n516)
    HWADDR=02:00:00:00:05:16;;
  prs505)
    HWADDR=02:00:00:00:05:05;;
  story)
    HWADDR=02:00:00:05:70:41;;
esac
    
echo "options g_ether dev_addr=$HWADDR" > $ROOTFS_PATH/rootfs-$ARCH/etc/modprobe.d/g_ether

case $DEVICE in
    n516)
        #
        # Pre-generation of most used locales
        #
        for i in ru_RU uk_UA en_US; do
            lzcat $ROOTFS_PATH/rootfs-$ARCH/usr/lib/locale-archive/main.tar.lzma | tar -x -C $ROOTFS_PATH/rootfs-$ARCH/usr/lib/locale $i.UTF-8
        done
        ;;
esac

find_file() {
    F="$1"

    if [ -f "$F" ]; then
        echo "$F"
        return
    fi
    if [ -f "logo/$F" ]; then
        echo "logo/$F"
        return
    fi
    if [ -f "oi-build-firmware/logo/$F" ]; then
        echo "oi-build-firmware/logo/$F"
        return
    fi
    if [ -f "../logo/$F" ]; then
        echo "../logo/$F"
        return
    fi
    if [ -f "data/$F" ]; then
        echo "data/$F"
        return
    fi
    if [ -f "oi-build-firmware/data/$F" ]; then
        echo "oi-build-firmware/data/$F"
        return
    fi
    if [ -f "../data/$F" ]; then
        echo "../data/$F"
        return
    fi
    if [ -f "/usr/share/oi-build-firmware/$F" ]; then
        echo "/usr/share/oi-build-firmware/$F" 
        return
    fi
}

# Pre-created dropbear keys
DSA_K=$(find_file dropbear_dss_host_key)
cp "$DSA_K" $ROOTFS_PATH/rootfs-$ARCH/etc/dropbear/dropbear_dss_host_key
RSA_K=$(find_file dropbear_rsa_host_key)
cp "$RSA_K" $ROOTFS_PATH/rootfs-$ARCH/etc/dropbear/dropbear_rsa_host_key
chmod 600 $ROOTFS_PATH/rootfs-$ARCH/etc/dropbear/*

case $DEVICE in
    n516)
        case $VARIANT in
            azbooka)
                SPLASH=azbooka-splash.png
                ERRORSPLASH=azbooka-errorsplash.png
                ;;
            *)
                SPLASH=oi-splash.png
                ERRORSPLASH=oi-splash.png
                ;;
        esac
        # Bootloader
        F_AZ=$(find_file $SPLASH)
        mk-rawpic -r270 -d3 --high $F_AZ $WORK_DIR/bootsplash.dat
        F_EAZ=$(find_file $ERRORSPLASH)
        mk-rawpic -r270 -d3 --high $F_EAZ $WORK_DIR/errorsplash.dat


        # Pre-generated fontconfig cache
        FC_F=$(find_file fontconfig/0fdfe5ca58fd9bc9e4fc72abcd5bc429-mipsel-ip-linux-gnu.cache-3)
        FC_D=$(dirname "$FC_F")
        cp "$FC_D/"*cache* $ROOTFS_PATH/rootfs-$ARCH/var/cache/fontconfig
    ;;
    *)
    ;;
esac

ROOTFS=$WORK_DIR/rootfs$KERNEL_FLAVOUR-$ARCH.tar

cross-pack-rootfs $ARCH $ROOTFS

UNPACK_PACKAGES=

case "$MODE" in
  install)
    UNPACK_PACKAGES="$UNPACK_PACKAGES linux-image-${LINUX_VERSION}$KERNEL_FLAVOUR"
    ;;
  live)
    UNPACK_PACKAGES="$UNPACK_PACKAGES linux-image-${LINUX_VERSION}-v3"
    ;;
esac

case "$DEVICE-$MODE" in
  n516-install)
    UNPACK_PACKAGES="$UNPACK_PACKAGES uboot-n516"
    ;;
esac

cross-shell $ARCH apt-get -y --force-yes install $UNPACK_PACKAGES

cross-shell $ARCH dpkg-query -W > $OUTPUT_DIR/$OUTPUT_NAME.pkglist

case "$MODE" in
    nfsroot)
        cp $ROOTFS "$OUTPUT_DIR/$OUTPUT_NAME.tar"
        bzip2 -9 "$OUTPUT_DIR/$OUTPUT_NAME.tar";;
    install)
        mkdir -p $WORK_DIR/rootfs
        (cd $WORK_DIR/rootfs && sudo tar xf $ROOTFS)

        if [ $DEVICE = n516 ]; then
            wget -O $WORK_DIR/metronome.wbf http://openinkpot.org/pub/contrib/n516-waveforms/default.wbf


            cp $ROOTFS_PATH/rootfs-$ARCH/boot/u-boot-nand.bin $WORK_DIR/u-boot-nand.bin
            cp $ROOTFS_PATH/rootfs-$ARCH/boot/vmlinuz-${LINUX_VERSION}$KERNEL_FLAVOUR $WORK_DIR/uImage

            pushd $WORK_DIR
            case $VARIANT in
                azbooka)
                    pack-firmware --description="Azbooka516 firmware." --output-name=$OUTPUT_NAME n516
                    ;;
                *)
                    pack-firmware --output-name $OUTPUT_NAME n516
                    ;;
            esac

            # Create a win-user friendly usbboot package.
            wget http://openinkpot.org/pub/contrib/n516-usbboot/n516-usbboot.zip
            unzip n516-usbboot.zip
            cp -l n516-image.bin n516-usbboot/
            zip -r $OUTPUT_NAME-flashimage.zip n516-usbboot

            cp $OUTPUT_NAME-*.zip $OUTPUT_DIR

            popd

        else
            if [ $DEVICE = v3 ]; then
                ERASEBLOCK=16384
                PAGESIZE=512
            else
                ERASEBLOCK=131072
                PAGESIZE=2048
            fi

            # XXX move this to pack-firmware
            sudo mkfs.jffs2 -l -n -e $ERASEBLOCK -s $PAGESIZE --faketime -r $WORK_DIR/rootfs -o $WORK_DIR/rootfs.noopt.jffs2
            sumtool -e $ERASEBLOCK -l -i $WORK_DIR/rootfs.noopt.jffs2 -o $WORK_DIR/rootfs.jffs2
            
            mkv3update --write-oi=$WORK_DIR/V3update.bin $ROOTFS_PATH/rootfs-$ARCH/boot/vmlinuz-${LINUX_VERSION}$KERNEL_FLAVOUR +$WORK_DIR/rootfs.jffs2
        
            sync
            zip -j $OUTPUT_DIR/$OUTPUT_NAME.zip $WORK_DIR/V3update.bin
        fi
        ;;
    live)
        cd $WORK_DIR

        cp $ROOTFS_PATH/rootfs-$ARCH/boot/vmlinuz-${LINUX_VERSION}-v3 .

        # Creates $WORK_DIR/initrd.gz
        mkinitramfs-v3 ${LINUX_VERSION}

        # Consumes $ROOTFS, generates $WORK_DIR/rootfs.ext2
        (cd $WORK_DIR; mkrootfs.ext2 $ROOTFS)

        mkdir -p $WORK_DIR/openinkpot

        mv $WORK_DIR/initrd.gz $WORK_DIR/rootfs.ext2 $WORK_DIR/vmlinuz-${LINUX_VERSION}-v3 $WORK_DIR/openinkpot

        echo "#!/bin/sh
DIR=\`dirname \$0\`
insmod \$DIR/reloaded.ko kernel=\$DIR/vmlinuz-${LINUX_VERSION}-v3 initrd=\$DIR/initrd.gz >> \$DIR/boot.log.txt 2>&1
dmesg > \$DIR/dmesg.txt
" > $WORK_DIR/openinkpot/boot-OI-V3.exe.fb2

        wget -O $WORK_DIR/openinkpot/reloaded.ko http://openinkpot.org/pub/contrib/v3all-reloaded/reloaded.ko

        (cd $WORK_DIR; zip -r $OUTPUT_DIR/$OUTPUT_NAME.zip openinkpot)
        ;;
esac
